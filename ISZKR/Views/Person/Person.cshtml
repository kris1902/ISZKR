@*
    TO DO:
        2.Dodawanie osoby - nowa strona z początkowymi danymi do uzupełnienia. W miarę możliwości pamiętanie członka jakim nowa osoba ma być dla tej z którego poziomu dodajemy osobę.
        4.Wyświetlanie, dodawanie zdjęć.
        5.Ustawienie profilowego dla osoby. (przekierowanie do modala z miniaturkami zdjęć na których jest i tam wybór)
        6.Autentykacja dostępu do kroniki (role?)
        
*@

@model ISZKR.ViewModels.OutsideViewModel

@{
    ViewBag.Title = Model.Person.Name + " " + Model.Person.Surname;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@**if (Request.IsAuthenticated)
    {
*@


<div class="family-tree">
    <div class="family-tree-parents">
        <div class="family-tree-father">
            <div class="family-tree-image">

                @if (Model.Person.FathersID != 0)
                {
                    <a href="#">
                        @if (Model.FamilyTreeViewModel.FathersPhotoURL == null)
                        {
                            <img src="~/Content/Images/person.jpg" alt="">
                        }
                        else
                        {
                            <img src="~/Content/Images/@Model.FamilyTreeViewModel.FathersPhotoURL" alt="">
                        }
                        <center><div class="name">@Model.FamilyTreeViewModel.FathersName<br />@Model.FamilyTreeViewModel.FathersSurname</div></center>
                        <center>
                            <div class="family-edit-group">
                                <a href="#" id="father-edit" class="edit" data-toggle="modal" data-target="#setFatherModal"><i class="glyphicon glyphicon-pencil"></i></a>
                                <a href="@Url.Action("Person", "Person", new { id = Model.Person.FathersID })" class="show"><i class="glyphicon glyphicon-user"></i></a>
                            </div>
                        </center>
                    </a>
                }
                else
                {
                    <a href="#" id="father-edit" class="edit" data-toggle="modal" data-target="#setFatherModal">
                        <img src="~/Content/Images/add_person.png" alt="">
                    </a>
                }
            </div>
        </div>

        <div class="family-tree-mother">
            <div class="family-tree-image">
                @if (Model.Person.MothersID != 0)
                {
                    <a href="#">
                        @if (Model.FamilyTreeViewModel.MothersPhotoURL == null)
                        {
                            <img src="~/Content/Images/person.jpg" alt="">
                        }
                        else
                        {
                            <img src="~/Content/Images/@Model.FamilyTreeViewModel.MothersPhotoURL" alt="">
                        }
                        <center><div class="name">@Model.FamilyTreeViewModel.MothersName<br />@Model.FamilyTreeViewModel.MothersSurname</div></center>
                        <center>
                            <div class="family-edit-group">
                                <a href="#" id="mother-edit" class="edit" data-toggle="modal" data-target="#setMotherModal"><i class="glyphicon glyphicon-pencil"></i></a>
                                <a href="@Url.Action("Person", "Person", new { id = Model.Person.MothersID })" class="show"><i class="glyphicon glyphicon-user"></i></a>
                            </div>
                        </center>
                    </a>
                }
                else
                {
                    <a href="#" id="mother-edit" class="edit" data-toggle="modal" data-target="#setMotherModal">
                        <img src="~/Content/Images/add_person.png" alt="">
                    </a>
                }
            </div>
        </div>
    </div>

    <div class="family-tree-partner">
        <div class="family-tree-image">
            @if (Model.Person.PartnerID != 0)
            {
                <a href="#">
                    @if (Model.FamilyTreeViewModel.PartnersPhotoURL == null)
                    {
                        <img src="~/Content/Images/person.jpg" alt="">
                    }
                    else
                    {
                        <img src="~/Content/Images/@Model.FamilyTreeViewModel.PartnersPhotoURL" alt="">
                    }
                    <center><div class="name">@Model.FamilyTreeViewModel.PartnersName<br />@Model.FamilyTreeViewModel.PartnersSurname</div></center>
                    <center>
                        <div class="family-edit-group">
                            <a href="#" id="partner-edit" class="edit" data-toggle="modal" data-target="#setPartnerModal"><i class="glyphicon glyphicon-pencil"></i></a>
                            <a href="@Url.Action("Person", "Person", new { id = Model.Person.PartnerID })" class="show"><i class="glyphicon glyphicon-user"></i></a>
                        </div>
                    </center>
                </a>
            }
            else
            {
                <a href="#" id="partner-edit" class="edit" data-toggle="modal" data-target="#setPartnerModal">
                    <img src="~/Content/Images/add_person.png" alt="">
                </a>
            }
        </div>
    </div>

    <div class="line-horizontal"></div>
    <div class="line-left"></div>
    <div class="line-right"></div>

    <div class="family-tree-person">
        <div class="family-tree-image">
            @if (Model.FamilyTreeViewModel.PersonPhotoURL == null)
            {
                <img src="~/Content/Images/person.jpg" alt="">
            }
            else
            {
                <a href="#"><img src="~/Content/Images/@Model.FamilyTreeViewModel.PersonPhotoURL" alt=""></a>
            }
            <center>
                <div class="family-person-edit-group">
                    <a href="#" id="person-photo-edit" class="edit edit-person-photo" data-toggle="modal" data-target="#"><i class="glyphicon glyphicon-camera"></i></a>
                    <a href="@Url.Action("DeletePerson", "Person", new { id = Model.Person.MothersID })" class="person-delete"><i class="glyphicon glyphicon-erase"></i></a>
                </div>
            </center>
        </div>
    </div>

    @foreach (var kid in Model.FamilyTreeViewModel.Kids)
    {
        <div class="family-tree-child">
            <div class="family-tree-image">
                <a href="#">
                    @if (kid.PhotoURL == null)
                    {
                        <img src="~/Content/Images/person.jpg" alt="">
                    }
                    else
                    {
                        <img src="~/Content/Images/@kid.PhotoURL" alt="">
                    }
                    <center><div class="name">@kid.Name<br />@kid.Surname</div></center>
                    <center>
                        <div class="family-edit-group-small">
                            <a href="#" id="kid-delete" class="edit edit-small" data-toggle="modal" data-target="#deleteKidModal" onclick="onKidDeleteClick(@kid.ID)"><i class="glyphicon glyphicon-trash"></i></a>
                            <a href="@Url.Action("Person", "Person", new { id = kid.ID })" class="show show-small"><i class="glyphicon glyphicon-user"></i></a>
                        </div>
                    </center>
                </a>
            </div>
        </div>
    }
    <div class="family-tree-child">
        <div class="family-tree-image">
            <a href="#" id="kid-edit" class="edit edit-small" data-toggle="modal" data-target="#setKidModal">
                <img src="~/Content/Images/add_person.png" alt="">
            </a>
        </div>
    </div>


            <!-- ############################## PANEL BLISKIEGO POKREWIEŃSTWA (tylko mały ekran - zamiast drzewka) ############################## -->

            <div class="panel-group close-relatives-panel">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" href="#close-relatives-collapse">Bliskie pokrewieństwo</a>
                        </h4>
                    </div>
                    <div id="close-relatives-collapse" class="panel-collapse collapse">
                        <div class="panel-body">
                            Małżonek:
                            <a href="#">@Model.FamilyTreeViewModel.PartnersName @Model.FamilyTreeViewModel.PartnersSurname </a>
                            <br />
                            Rodzice:
                            <a href="#">@Model.FamilyTreeViewModel.FathersName @Model.FamilyTreeViewModel.FathersSurname </a>
                            <a href="#">@Model.FamilyTreeViewModel.MothersName @Model.FamilyTreeViewModel.MothersSurname </a>
                            <br />
                            Dzieci:
                            @foreach (var kid in Model.FamilyTreeViewModel.Kids)
                            {
                                <a href="@Url.Action("Person", "Person", new { id = kid.ID })">@kid.Name @kid.Surname</a>
                            }
                            <br />
                        </div>
                    </div>
                </div>
            </div>

            <!-- ############################## PANEL DALSZEGO POKREWIEŃSTWA ############################## -->

            <div class="panel-group other-relatives-panel">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" href="#other-relatives-collapse">Dalsze pokrewieństwo</a>
                        </h4>
                    </div>
                    <div id="other-relatives-collapse" class="panel-collapse collapse">
                        <div class="panel-body">
                            Rodzeństwo:
                            <a href="#">Milena Kowalska-Rak </a>
                            <br />
                            Stryjostwo/Wujostwo:
                            <a href="#">Zenon Adamiec </a>
                            <a href="#">Tomasz Styczeń </a>
                            <a href="#">Zbigniew Adamiec </a>
                            <br />
                            Kuzynostwo:
                            <a href="#">Marek Adamiec </a>
                            <a href="#">Szymon Kowalski </a>
                            <a href="#">Renata Kowalska </a>
                            <a href="#">Maria Adamiec </a>
                            <br />
                            Teściowie:
                            <a href="#">Roman Zioło </a>
                            <a href="#">Maria Zioło </a>
                            <br />
                            Szwagrowie/Szwagierki:
                            <a href="#">Teresa Wilk </a>
                            <a href="#">Marlena Zioło </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- ############################## PANEL POWIĄZANYCH ZDARZEŃ ############################## -->

            <div class="panel-group linked-events-panel">
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" href="#linked-events-collapse">Powiązane zdarzenia</a>
                        </h4>
                    </div>
                    <div id="linked-events-collapse" class="panel-collapse collapse">
                        <div class="panel-body">
                            <ul>
                                <li><a href="zdarzenie1.html">Przykładowe zdarzenie</a></li>
                                <li><a href="#">Urodziny Adama w Parku 2008</a></li>
                                <li><a href="#">Ślub Adama i Anety</a></li>
                                <li><a href="#">Urodziny Adama 2004</a></li>
                                <li><a href="#">Trzydziestka Adama</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- ############################## KONIEC DRZEWKA ############################## -->
        <!-- ############################## TREŚĆ OSOBY ############################## -->

        <div class="person-site-content">
            <div class="basic-info">
                <h1 id="person-name">
                    @Model.Person.Name @Model.Person.Surname
                    <span id="person-familyname">
                        @if (Model.Person.FamilySurname != null)
                        {@: (@Model.Person.FamilySurname )
                                    ;
                        }
                </span>
            </h1>

            @using (Ajax.BeginForm("EditName", "Person", new { },
                new AjaxOptions { OnSuccess = "successEditPersonName(data)", HttpMethod = FormMethod.Post.ToString() }, new { id = "name-edit-form" }))
            {
                @Html.HiddenFor(Model => Model.Person.ID)
                @Html.EditorFor(Model => Model.Person.Name, new { htmlAttributes = new { @id = "person-name-edit-textbox" } })
                @Html.EditorFor(Model => Model.Person.Surname, new { htmlAttributes = new { @id = "person-surname-edit-textbox" } })
                @:(@Html.EditorFor(Model => Model.Person.FamilySurname, new { htmlAttributes = new { @id = "person-familyname-edit-textbox" } }))
                <button class="btn btn-success person-name-edit-btn" id="person-name-edit-btn" type="submit"><i class="glyphicon glyphicon-ok"></i></button>
                @Html.ValidationMessageFor(Model => Model.Person.Name, "", new { @class = "text-danger" })
            }

            <span id="born-info" class="born-info"><b> 
            @if (Model.Person.Gender == "K")
            { <text>Urodzona:</text> }
            else
            { <text>Urodzony:</text> } </b> 
            @if (Model.Person.BirthDateTime == DateTime.Parse("1900-01-01") && Model.Person.BirthPlace == null)
            {
                @:Brak danych
            }
            else
            {
                <span id="born-date">@Model.Person.BirthDateTime.Date.ToString("d MMMM yyyy")</span> @:<span id = "born-city">(@Model.Person.BirthPlace)</span ><br />
            }
            </span>
            
                <!--EDIT -->
            @using (Ajax.BeginForm("EditBirth", "Person", new { },
                new AjaxOptions { OnSuccess = "successEditPersonBirth(data)", HttpMethod = FormMethod.Post.ToString() }, new { id = "born-info-edit" }))
            {
                @Html.HiddenFor(Model => Model.Person.ID)
                @Html.EditorFor(Model => Model.Person.BirthDateTime, new { htmlAttributes = new { @id = "born-info-edit-date" } })
                @Html.EditorFor(Model => Model.Person.BirthPlace, new { htmlAttributes = new { @id = "born-info-edit-city" } })
                <button class="btn btn-success born-info-edit-btn" id="born-info-edit-btn" type="submit"><i class="glyphicon glyphicon-ok"></i></button>
            }
                <br />

            
            <span id="death-info" class="death-info">
            <b>
            @if (Model.Person.Gender == "K")
            {
                @:Zmarła:
            }
            else
            {
                @:Zmarły:
            }
            </b>
            @if (Model.Person.DeathDateTime == DateTime.Parse("1900-01-01") && Model.Person.DeathPlace == null)
            {
                @: Nie dotyczy
            }
            else
            {
            <span id="death-date">@Model.Person.DeathDateTime.ToString("d MMMM yyyy")</span> @:<span id="death-city">(@Model.Person.DeathPlace)</span><br />
            }
           </span>
                <!--EDIT -->
            @using (Ajax.BeginForm("EditDeath", "Person", new { },
        new AjaxOptions { OnSuccess = "successEditPersonDeath(data)", HttpMethod = FormMethod.Post.ToString() }, new { id = "death-info-edit" }))
            {
                @Html.HiddenFor(Model => Model.Person.ID)
                @Html.EditorFor(Model => Model.Person.DeathDateTime, new { htmlAttributes = new { @id = "death-info-edit-date" } })
                @Html.EditorFor(Model => Model.Person.DeathPlace, new { htmlAttributes = new { @id = "death-info-edit-city" } })
                <button class="btn btn-success death-info-edit-btn" id="death-info-edit-btn" type="submit"><i class="glyphicon glyphicon-ok"></i></button>
            }
            <br />
            
            <span id="burial-info" class="burial-info"><b>Miejsce pochówku:</b>
            @if (Model.Person.RestingPlace == null)
            {
                @: Nie dotyczy
            }
            else
            {
                <span id = "burial-place" > @Model.Person.RestingPlace </span >
            }
            </span>
                <!--EDIT -->
            @using (Ajax.BeginForm("EditBurial", "Person", new { },
            new AjaxOptions { OnSuccess = "successEditPersonBurial(data)", HttpMethod = FormMethod.Post.ToString() }, new { id = "burial-info-edit" }))
            {
                @Html.HiddenFor(Model => Model.Person.ID)
                @Html.EditorFor(Model => Model.Person.RestingPlace, new { htmlAttributes = new { @id = "burial-info-edit-text" } })
                <button class="btn btn-success burial-info-edit-btn" id="burial-info-edit-btn" type="submit"><i class="glyphicon glyphicon-ok"></i></button>
            }
            <br />
        </div>

        <h3>Opis</h3>
        <button class="btn btn-primary description-edit-btn" id="description-edit-btn" type="submit"><i class="glyphicon glyphicon-edit"></i></button>

        <div data-editable class="description" data-name="description-content">

            @Html.Raw(Model.Person.Description)

        </div>
    </div>

    @Html.Action("RenderTables", "Person", new { Model.Person })

    @Html.Action("RenderGallery", "Person", new { Model.Person })
    }

<div class="modal fade" id="setFatherModal" data-url="@Url.Action("setPersonsRelative", "Person", new { personid = Model.Person.ID, relative = "father" })" tabindex="-1" role="dialog" aria-labelledby="setFatherModal" aria-hidden="true"></div>
<div class="modal fade" id="setMotherModal" data-url="@Url.Action("setPersonsRelative", "Person", new { personid = Model.Person.ID, relative = "mother" })" tabindex="-1" role="dialog" aria-labelledby="setMotherModal" aria-hidden="true"></div>
<div class="modal fade" id="setPartnerModal" data-url="@Url.Action("setPersonsRelative", "Person", new { personid = Model.Person.ID, relative = "partner" })" tabindex="-1" role="dialog" aria-labelledby="setPartnerModal" aria-hidden="true"></div>
<div class="modal fade" id="setKidModal" data-url="@Url.Action("setPersonsRelative", "Person", new { personid = Model.Person.ID, relative = "kid" })" tabindex="-1" role="dialog" aria-labelledby="setKidModal" aria-hidden="true"></div>

<div class="modal fade" id="deleteKidModal" tabindex="-1" role="dialog" aria-labelledby="deleteKidModal" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-body">
                <h3>Czy na pewno chcesz skasować to dziecko?</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Zamknij</button>
                @Html.ActionLink("Skasuj", "DeleteKid", "Person", new { person_id = Model.Person.ID }, new { @id = "deleteKidBtn", @class = "btn btn-danger" })
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/Scripts/PersonEdit.js")